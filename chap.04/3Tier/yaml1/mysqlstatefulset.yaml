apiVersion: v1
data: 
  utf8.cnf: |
      [client]
      default-character-set = utf8
      
      [mysqld]
      init_connect = SET collation_connection = utf8_general_ci
      init_connect = SET NAMES utf8
      character-set-server = utf8
      collation-server = utf8_general_ci
      skip-character-set-client-handshake
      
      [mysqldump]
      default-character-set = utf8
      
      [mysql]
      default-character-set = utf8
kind: ConfigMap
metadata: 
  creationTimestamp: ~
  name: mysql-cnf

---

apiVersion: v1
data:
  dbname: Ym9vdF9ib2FyZA==
  rootpass: ZnJvZG8=
  username: ZnJvZG8=
  userpass: ZnJvZG81MDIwISE=
kind: Secret
metadata:
  name: mysql-secret

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
spec:
  selector:
    app: mysql
  ports:
  - port: 3306
    targetPort: 3306
  clusterIP: None #헤드리스 서비스 -> clusterIP가 없음 

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db2
spec:
  replicas: 1
  serviceName: mysql-svc
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mysql
          image: grovince/rapa_db:v1
          args:
            - "--ignore-db-dir=lost+found"
          ports:
            - name: tpc
              protocol: TCP
              containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret #참조할 secret의 이름
                  key: rootpass #db-secret에서 rootpass 값을 참조함
            - name: MYSQL_ROOT_HOST
              value: '%'
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: dbname
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: userpass          
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            - name: conf
              mountPath: /etc/mysql/conf.d
      volumes:
        - name: conf
          configMap:
            name: mysql-cnf
  volumeClaimTemplates: 
    - metadata:
        name: data
      spec:
        # storageClassName: standard 
        # => default로 동작함 (standard-rwo (default)으로 실행됨)
        accessModes:
          - ReadWriteOnce
        storageClassName: aws-sc-ebs #
        resources:
          requests:
            storage: 1Gi